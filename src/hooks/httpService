/** @format */

import apiClient from './apiFakeCliente';

interface Entity {
	id: number;
}
class HttpService {
	endpoint: string;
	constructor(endpoint: string) {
		this.endpoint = endpoint;
	}
	getAll<T>() {
		const controler = new AbortController();
		const request = apiClient.get<T[]>(this.endpoint, {
			signal: controler.signal,
		});
		return { request, cancel: () => controler.abort() };
	}

	delete(id: number) {
		return apiClient.delete(this.endpoint + id);
	}

	create<T>(entity: T) {
		return apiClient.post(this.endpoint, entity);
	}

	update<T extends Entity>(entity: T) {
		return apiClient.patch(this.endpoint + entity.id, entity);
	}
}

const createHttpService = (endpoint: string) => new HttpService(endpoint);

export default createHttpService;

